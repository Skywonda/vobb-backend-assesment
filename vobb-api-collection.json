{
  "info": {
    "_postman_id": "b0e7b5e2-8f3a-4b3c-a752-c8f7e8f9b8a7",
    "name": "VOBB API - Complete Documentation",
    "description": "Complete API collection for VOBB car dealership system. This collection covers all available endpoints including authentication, car management, orders, and user management.\n\n## Base URL\n`{{baseUrl}}/api/v1`\n\n## Authentication\nThe API uses JWT Bearer tokens for authentication. After login, include the token in the Authorization header:\n`Authorization: Bearer {{auth_token}}`\n\n## Rate Limiting\n- 100 requests per 15 minutes per IP\n\n## Error Responses\nAll errors follow this format:\n```json\n{\n  \"status\": false,\n  \"message\": \"Error description\"\n}\n```\n\n## Getting Started\n1. Register as a manager or customer\n2. Login to get your auth token\n3. Set the token in the collection variable `auth_token`\n4. Start making requests!",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string",
      "description": "Base URL for the VOBB API"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string",
      "description": "JWT token for authentication. Set this after login."
    },
    {
      "key": "manager_token",
      "value": "",
      "type": "string",
      "description": "Manager JWT token for manager-specific operations"
    },
    {
      "key": "customer_token",
      "value": "",
      "type": "string",
      "description": "Customer JWT token for customer-specific operations"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "../..",
                "health"
              ]
            },
            "description": "Check if the server is running and healthy"
          },
          "response": [
            {
              "name": "Successful Health Check",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "../..",
                    "health"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": true,\n  \"data\": {\n    \"status\": \"ok\",\n    \"message\": \"Server is up and running\",\n    \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n    \"uptime\": 3600\n  }\n}"
            }
          ]
        }
      ],
      "description": "Health check endpoints to verify server status"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Managers",
          "item": [
            {
              "name": "Register Manager",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"manager@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Jane Manager\",\n  \"phoneNumber\": \"+1234567890\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/managers/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "managers",
                    "register"
                  ]
                },
                "description": "Register a new manager account. Managers can create, update, and delete cars, manage categories, and approve orders."
              },
              "response": [
                {
                  "name": "Successful Registration",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"manager@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Jane Manager\",\n  \"phoneNumber\": \"+1234567890\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/managers/register",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "managers",
                        "register"
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": true,\n  \"data\": {\n    \"manager\": {\n      \"_id\": \"60d5ec49f8b2f845c8f8e8e8\",\n      \"email\": \"manager@example.com\",\n      \"name\": \"Jane Manager\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00.000Z\"\n    },\n    \"tokens\": {\n      \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n      \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n    }\n  },\n  \"message\": \"Resource created successfully\"\n}"
                }
              ]
            },
            {
              "name": "Login Manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.tokens) {",
                      "        pm.collectionVariables.set('manager_token', response.data.tokens.accessToken);",
                      "        pm.collectionVariables.set('auth_token', response.data.tokens.accessToken);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"manager@example.com\",\n  \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/managers/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "managers",
                    "login"
                  ]
                },
                "description": "Login to manager account. Returns JWT tokens for authentication."
              }
            }
          ]
        },
        {
          "name": "Customers",
          "item": [
            {
              "name": "Register Customer",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\",\n  \"phone\": \"+1234567890\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "register"
                  ]
                },
                "description": "Register a new customer account. Customers can browse cars, place orders, and manage their profiles."
              }
            },
            {
              "name": "Login Customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.tokens) {",
                      "        pm.collectionVariables.set('customer_token', response.data.tokens.accessToken);",
                      "        pm.collectionVariables.set('auth_token', response.data.tokens.accessToken);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "login"
                  ]
                },
                "description": "Login to customer account. Returns JWT tokens for authentication."
              }
            }
          ]
        }
      ],
      "description": "Authentication endpoints for managers and customers"
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cars/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "categories"
              ]
            },
            "description": "Get a list of all active categories. This endpoint is public and doesn't require authentication."
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cars/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "cars",
                    "categories"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": true,\n  \"data\": [\n    {\n      \"_id\": \"60d5ec49f8b2f845c8f8e8e8\",\n      \"name\": \"SUV\",\n      \"description\": \"Sport Utility Vehicle category\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00.000Z\"\n    },\n    {\n      \"_id\": \"60d5ec49f8b2f845c8f8e8e9\",\n      \"name\": \"Sedan\",\n      \"description\": \"Four-door passenger car\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cars/categories/60d5ec49f8b2f845c8f8e8e8",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "categories",
                "60d5ec49f8b2f845c8f8e8e8"
              ]
            },
            "description": "Get detailed information about a specific category by its ID. This endpoint is public."
          }
        },
        {
          "name": "Create Category",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electric Vehicle\",\n  \"description\": \"Electric and hybrid vehicles category\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cars/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "categories"
              ]
            },
            "description": "Create a new category. Only managers can perform this operation."
          }
        },
        {
          "name": "Update Category",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"SUV & Crossover\",\n  \"description\": \"Sport Utility Vehicles and Crossovers for family use\",\n  \"isActive\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cars/categories/60d5ec49f8b2f845c8f8e8e8",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "categories",
                "60d5ec49f8b2f845c8f8e8e8"
              ]
            },
            "description": "Update an existing category. Only managers can perform this operation."
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/cars/categories/60d5ec49f8b2f845c8f8e8e8",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "categories",
                "60d5ec49f8b2f845c8f8e8e8"
              ]
            },
            "description": "Soft delete a category (sets isActive to false). Only managers can perform this operation."
          }
        }
      ],
      "description": "Category management endpoints. Categories are used to organize cars into different types (SUV, Sedan, etc.)"
    },
    {
      "name": "Cars",
      "item": [
        {
          "name": "Get All Cars",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cars?page=1&limit=10&brand=&modelName=&category=&available=&year=&minPrice=&maxPrice=&transmission=&fuelType=&condition=&sort=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10)"
                },
                {
                  "key": "brand",
                  "value": "",
                  "description": "Filter by car brand (case-insensitive partial match)"
                },
                {
                  "key": "modelName",
                  "value": "",
                  "description": "Filter by model name (case-insensitive partial match)"
                },
                {
                  "key": "category",
                  "value": "",
                  "description": "Filter by category ID"
                },
                {
                  "key": "available",
                  "value": "",
                  "description": "Filter by availability (true/false)"
                },
                {
                  "key": "year",
                  "value": "",
                  "description": "Filter by exact year"
                },
                {
                  "key": "minPrice",
                  "value": "",
                  "description": "Filter by minimum price"
                },
                {
                  "key": "maxPrice",
                  "value": "",
                  "description": "Filter by maximum price"
                },
                {
                  "key": "transmission",
                  "value": "",
                  "description": "Filter by transmission type (manual/automatic)"
                },
                {
                  "key": "fuelType",
                  "value": "",
                  "description": "Filter by fuel type (petrol/diesel/electric/hybrid)"
                },
                {
                  "key": "condition",
                  "value": "",
                  "description": "Filter by condition (new/used)"
                },
                {
                  "key": "sort",
                  "value": "",
                  "description": "Sort field and direction (e.g., 'price', '-price', 'year', '-createdAt')"
                }
              ]
            },
            "description": "Get a paginated list of all cars with optional filters. This endpoint is public and supports extensive filtering and sorting options."
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cars?page=1&limit=2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "cars"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "2"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": true,\n  \"data\": [\n    {\n      \"_id\": \"60d5ec49f8b2f845c8f8e8ea\",\n      \"brand\": \"Toyota\",\n      \"modelName\": \"Camry\",\n      \"year\": 2024,\n      \"price\": 35000,\n      \"category\": {\n        \"_id\": \"60d5ec49f8b2f845c8f8e8e9\",\n        \"name\": \"Sedan\",\n        \"description\": \"Four-door passenger car\"\n      },\n      \"mileage\": 0,\n      \"transmission\": \"automatic\",\n      \"fuelType\": \"hybrid\",\n      \"engineSize\": 2.5,\n      \"color\": \"Midnight Blue\",\n      \"vin\": \"1HGCM82633A123456\",\n      \"available\": true,\n      \"condition\": \"new\",\n      \"quantity\": 5,\n      \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00.000Z\"\n    }\n  ],\n  \"metadata\": {\n    \"pagination\": {\n      \"page\": 1,\n      \"limit\": 2,\n      \"total\": 25,\n      \"pages\": 13\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Car by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cars/60d5ec49f8b2f845c8f8e8ea",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "60d5ec49f8b2f845c8f8e8ea"
              ]
            },
            "description": "Get detailed information about a specific car by its ID. This endpoint is public."
          }
        },
        {
          "name": "Create Car",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"brand\": \"Toyota\",\n  \"modelName\": \"Camry\",\n  \"year\": 2024,\n  \"price\": 35000,\n  \"category\": \"60d5ec49f8b2f845c8f8e8e9\",\n  \"mileage\": 0,\n  \"transmission\": \"automatic\",\n  \"fuelType\": \"hybrid\",\n  \"engineSize\": 2.5,\n  \"color\": \"Midnight Blue\",\n  \"vin\": \"1HGCM82633A123456\",\n  \"available\": true,\n  \"condition\": \"new\",\n  \"quantity\": 5\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cars",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars"
              ]
            },
            "description": "Create a new car entry. Only managers can perform this operation. The car will be associated with the authenticated manager."
          }
        },
        {
          "name": "Update Car",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"price\": 32000,\n  \"color\": \"Pearl White\",\n  \"mileage\": 5000,\n  \"available\": true,\n  \"quantity\": 3\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cars/60d5ec49f8b2f845c8f8e8ea",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "60d5ec49f8b2f845c8f8e8ea"
              ]
            },
            "description": "Update an existing car's information. Only the manager who created the car can update it."
          }
        },
        {
          "name": "Delete Car",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/cars/60d5ec49f8b2f845c8f8e8ea",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cars",
                "60d5ec49f8b2f845c8f8e8ea"
              ]
            },
            "description": "Delete a car from the system. Only the manager who created the car can delete it."
          }
        }
      ],
      "description": "Car inventory management endpoints. Cars are the main products in the dealership system."
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Managers",
          "item": [
            {
              "name": "Get Manager Profile",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{manager_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/managers/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "managers",
                    "profile"
                  ]
                },
                "description": "Get the authenticated manager's profile information."
              }
            },
            {
              "name": "Update Manager Profile",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{manager_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Jane Updated Manager\",\n  \"phoneNumber\": \"+9876543210\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/managers/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "managers",
                    "profile"
                  ]
                },
                "description": "Update the authenticated manager's profile information."
              }
            },
            {
              "name": "Change Manager Password",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{manager_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"currentPassword\": \"oldpassword123\",\n  \"newPassword\": \"newpassword123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/managers/change-password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "managers",
                    "change-password"
                  ]
                },
                "description": "Change the authenticated manager's password. Requires the current password for verification."
              }
            }
          ],
          "description": "Manager profile management endpoints"
        },
        {
          "name": "Customers",
          "item": [
            {
              "name": "Get Customer Profile",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/customers/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "profile"
                  ]
                },
                "description": "Get the authenticated customer's profile information."
              }
            },
            {
              "name": "Update Customer Profile",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Updated Doe\",\n  \"phone\": \"+9876543210\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "profile"
                  ]
                },
                "description": "Update the authenticated customer's profile information."
              }
            }
          ],
          "description": "Customer profile management endpoints"
        }
      ],
      "description": "User profile management for both managers and customers"
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"carId\": \"60d5ec49f8b2f845c8f8e8ea\",\n  \"quantity\": 1,\n  \"notes\": \"Please deliver before noon. Prefer white color if available.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            },
            "description": "Create a new order for a car. Only authenticated customers can create orders. The order will be in 'pending_payment' status initially."
          },
          "response": [
            {
              "name": "Successful Order Creation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"carId\": \"60d5ec49f8b2f845c8f8e8ea\",\n  \"quantity\": 1,\n  \"notes\": \"Please deliver before noon\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "orders"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": true,\n  \"data\": {\n    \"_id\": \"60d5ec49f8b2f845c8f8e8eb\",\n    \"car\": \"60d5ec49f8b2f845c8f8e8ea\",\n    \"customer\": \"60d5ec49f8b2f845c8f8e8ec\",\n    \"quantity\": 1,\n    \"totalPrice\": 35000,\n    \"status\": \"pending_payment\",\n    \"paymentStatus\": \"pending\",\n    \"paymentReference\": \"PAY_1234567890abcdef\",\n    \"notes\": \"Please deliver before noon\",\n    \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n    \"updatedAt\": \"2024-01-15T10:30:00.000Z\"\n  },\n  \"message\": \"Order created successfully. Please proceed with payment.\"\n}"
            }
          ]
        },
        {
          "name": "Process Payment",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/60d5ec49f8b2f845c8f8e8eb/payment",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                "60d5ec49f8b2f845c8f8e8eb",
                "payment"
              ]
            },
            "description": "Process payment for an order. Only the customer who created the order can process payment. This endpoint simulates payment processing with a 90% success rate."
          },
          "response": [
            {
              "name": "Successful Payment",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/orders/60d5ec49f8b2f845c8f8e8eb/payment",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "orders",
                    "60d5ec49f8b2f845c8f8e8eb",
                    "payment"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": true,\n  \"data\": {\n    \"_id\": \"60d5ec49f8b2f845c8f8e8eb\",\n    \"car\": \"60d5ec49f8b2f845c8f8e8ea\",\n    \"customer\": \"60d5ec49f8b2f845c8f8e8ec\",\n    \"quantity\": 1,\n    \"totalPrice\": 35000,\n    \"status\": \"paid\",\n    \"paymentStatus\": \"completed\",\n    \"paymentReference\": \"PAY_1234567890abcdef\",\n    \"transactionId\": \"TXN_abcdef1234567890\",\n    \"notes\": \"Please deliver before noon\",\n    \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n    \"updatedAt\": \"2024-01-15T10:35:00.000Z\"\n  },\n  \"message\": \"Payment processed successfully\"\n}"
            }
          ]
        },
        {
          "name": "Get My Orders",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/my-orders?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                "my-orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10)"
                }
              ]
            },
            "description": "Get all orders for the authenticated customer with pagination."
          }
        },
        {
          "name": "Get All Orders (Manager)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?page=1&limit=10&status=&paymentStatus=&customerId=&carId=&startDate=&endDate=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10)"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by order status (pending_payment/paid/confirmed/cancelled/rejected)"
                },
                {
                  "key": "paymentStatus",
                  "value": "",
                  "description": "Filter by payment status (pending/completed/failed)"
                },
                {
                  "key": "customerId",
                  "value": "",
                  "description": "Filter by customer ID"
                },
                {
                  "key": "carId",
                  "value": "",
                  "description": "Filter by car ID"
                },
                {
                  "key": "startDate",
                  "value": "",
                  "description": "Filter by start date (ISO 8601 format)"
                },
                {
                  "key": "endDate",
                  "value": "",
                  "description": "Filter by end date (ISO 8601 format)"
                }
              ]
            },
            "description": "Get all orders in the system with filtering options. Only managers can access this endpoint."
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/60d5ec49f8b2f845c8f8e8eb",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                "60d5ec49f8b2f845c8f8e8eb"
              ]
            },
            "description": "Get detailed information about a specific order by its ID. This endpoint is public but shows full details only to the customer who owns the order or to managers."
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{manager_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"notes\": \"Order approved and ready for delivery. Estimated delivery in 3-5 business days.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders/60d5ec49f8b2f845c8f8e8eb/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                "60d5ec49f8b2f845c8f8e8eb",
                "status"
              ]
            },
            "description": "Update an order's status. Only managers can perform this operation. Valid statuses are 'confirmed' or 'rejected'. The order must be in 'paid' status to be updated."
          }
        }
      ],
      "description": "Order management endpoints. Orders represent customer purchases and go through various states from creation to completion."
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set auth token if available",
          "if (pm.collectionVariables.get('auth_token')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + pm.collectionVariables.get('auth_token')",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test scripts",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has proper Content-Type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test response structure for successful responses",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Response has status field', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('status');",
          "        pm.expect(jsonData.status).to.be.a('boolean');",
          "    });",
          "}"
        ]
      }
    }
  ]
}